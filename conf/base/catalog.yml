# Here you can define all your datasets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html

raw_kobe_shots_dev:
  type: pandas.ParquetDataset
  filepath: data/01_raw/dataset_kobe_dev.parquet
  metadata:
    kedro-viz:
      layer: raw

raw_kobe_shots_prod:
  type: pandas.ParquetDataset
  filepath: data/01_raw/dataset_kobe_prod.parquet
  metadata:
    kedro-viz:
      layer: raw

preprocessed_kobe_shots:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/preprocessed_kobe_shots.parquet
  metadata:
    kedro-viz:
      layer: intermediate

preprocessed_kobe_shots_prod:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/preprocessed_kobe_shots_prod.parquet
  metadata:
    kedro-viz:
      layer: intermediate

model_input_table:
  type: pandas.ParquetDataset
  filepath: data/03_primary/data_filtered.parquet
  metadata:
    kedro-viz:
      layer: primary

base_train:
  type: pandas.ParquetDataset
  filepath: data/03_primary/base_train.parquet
  metadata:
    kedro-viz:
      layer: primary

base_test:
  type: pandas.ParquetDataset
  filepath: data/03_primary/base_test.parquet
  metadata:
    kedro-viz:
      layer: primary

logistic_regression_model:
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.sklearn
  artifact_path: logistic_regression_model
  save_args:
    registered_model_name: logistic-regression-model

logistic_regression_model_with_proba:
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.sklearn
  artifact_path: logistic_regression_model_with_proba
  save_args:
    registered_model_name: logistic-regression-model-dev
    pyfunc_predict_fn: predict_proba

logistic_regression_model_dev:
  type: kedro_mlflow.io.models.MlflowModelRegistryDataset
  model_name: logistic-regression-model-dev

logistic_regression_model_auc:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pillow.ImageDataset
    filepath: data/08_reporting/logistic_regression_model_auc.png
    metadata:
      kedro-viz:
        layer: reporting

logistic_regression_model_confusion_matrix:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pillow.ImageDataset
    filepath: data/08_reporting/logistic_regression_model_confusion_matrix.png
    metadata:
      kedro-viz:
        layer: reporting

logistic_regression_model_feature_importance:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pillow.ImageDataset
    filepath: data/08_reporting/logistic_regression_model_feature_importance.png
    metadata:
      kedro-viz:
        layer: reporting

decision_tree_model:
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.sklearn
  artifact_path: decision_tree_model
  save_args:
    registered_model_name: decision-tree-model

decision_tree_model_auc:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pillow.ImageDataset
    filepath: data/08_reporting/decision_tree_model_auc.png
    metadata:
      kedro-viz:
        layer: reporting

decision_tree_model_confusion_matrix:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pillow.ImageDataset
    filepath: data/08_reporting/decision_tree_model_confusion_matrix.png
    metadata:
      kedro-viz:
        layer: reporting

decision_tree_model_feature_importance:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pillow.ImageDataset
    filepath: data/08_reporting/decision_tree_model_feature_importance.png

best_model:
  type: kedro_mlflow.io.models.MlflowModelRegistryDataset
  model_name: logistic-regression-model

production_data_predictions:
  type: pandas.ParquetDataset
  filepath: data/08_reporting/production_data_predictions.parquet
  metadata:
    kedro-viz:
      layer: reporting
